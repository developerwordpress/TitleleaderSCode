//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TitleLeader.OrderPlacementWebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderPlacementService.Address", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TitleLeader.OrderPlacementWebService.OrderPlacementServicePropertyAddress))]
    public partial class OrderPlacementServiceAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressStreetInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParcelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParcelID2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParcelID3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParcelID4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TitleLeader.OrderPlacementWebService.PlattedProperty[] PlattedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TitleLeader.OrderPlacementWebService.UnplattedProperty[] UnplattedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressStreetInfo {
            get {
                return this.AddressStreetInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressStreetInfoField, value) != true)) {
                    this.AddressStreetInfoField = value;
                    this.RaisePropertyChanged("AddressStreetInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalDescription {
            get {
                return this.LegalDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalDescriptionField, value) != true)) {
                    this.LegalDescriptionField = value;
                    this.RaisePropertyChanged("LegalDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParcelID {
            get {
                return this.ParcelIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ParcelIDField, value) != true)) {
                    this.ParcelIDField = value;
                    this.RaisePropertyChanged("ParcelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParcelID2 {
            get {
                return this.ParcelID2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ParcelID2Field, value) != true)) {
                    this.ParcelID2Field = value;
                    this.RaisePropertyChanged("ParcelID2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParcelID3 {
            get {
                return this.ParcelID3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ParcelID3Field, value) != true)) {
                    this.ParcelID3Field = value;
                    this.RaisePropertyChanged("ParcelID3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParcelID4 {
            get {
                return this.ParcelID4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ParcelID4Field, value) != true)) {
                    this.ParcelID4Field = value;
                    this.RaisePropertyChanged("ParcelID4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TitleLeader.OrderPlacementWebService.PlattedProperty[] Platted {
            get {
                return this.PlattedField;
            }
            set {
                if ((object.ReferenceEquals(this.PlattedField, value) != true)) {
                    this.PlattedField = value;
                    this.RaisePropertyChanged("Platted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetDirection {
            get {
                return this.StreetDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetDirectionField, value) != true)) {
                    this.StreetDirectionField = value;
                    this.RaisePropertyChanged("StreetDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetName {
            get {
                return this.StreetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNameField, value) != true)) {
                    this.StreetNameField = value;
                    this.RaisePropertyChanged("StreetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetNumber {
            get {
                return this.StreetNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNumberField, value) != true)) {
                    this.StreetNumberField = value;
                    this.RaisePropertyChanged("StreetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetSuffix {
            get {
                return this.StreetSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetSuffixField, value) != true)) {
                    this.StreetSuffixField = value;
                    this.RaisePropertyChanged("StreetSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TitleLeader.OrderPlacementWebService.UnplattedProperty[] Unplatted {
            get {
                return this.UnplattedField;
            }
            set {
                if ((object.ReferenceEquals(this.UnplattedField, value) != true)) {
                    this.UnplattedField = value;
                    this.RaisePropertyChanged("Unplatted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderPlacementService.PropertyAddress", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class OrderPlacementServicePropertyAddress : TitleLeader.OrderPlacementWebService.OrderPlacementServiceAddress {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlattedProperty", Namespace="")]
    [System.SerializableAttribute()]
    public partial class PlattedProperty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BookPageSourceTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TitleLeader.OrderPlacementWebService.LotBlockOther[] LotBlockOtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Book {
            get {
                return this.BookField;
            }
            set {
                if ((object.ReferenceEquals(this.BookField, value) != true)) {
                    this.BookField = value;
                    this.RaisePropertyChanged("Book");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<int> BookPageSourceTypeID {
            get {
                return this.BookPageSourceTypeIDField;
            }
            set {
                if ((this.BookPageSourceTypeIDField.Equals(value) != true)) {
                    this.BookPageSourceTypeIDField = value;
                    this.RaisePropertyChanged("BookPageSourceTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public TitleLeader.OrderPlacementWebService.LotBlockOther[] LotBlockOther {
            get {
                return this.LotBlockOtherField;
            }
            set {
                if ((object.ReferenceEquals(this.LotBlockOtherField, value) != true)) {
                    this.LotBlockOtherField = value;
                    this.RaisePropertyChanged("LotBlockOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Page {
            get {
                return this.PageField;
            }
            set {
                if ((object.ReferenceEquals(this.PageField, value) != true)) {
                    this.PageField = value;
                    this.RaisePropertyChanged("Page");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnplattedProperty", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UnplattedProperty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RangeDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TownshipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TownshipDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Range {
            get {
                return this.RangeField;
            }
            set {
                if ((object.ReferenceEquals(this.RangeField, value) != true)) {
                    this.RangeField = value;
                    this.RaisePropertyChanged("Range");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string RangeDirection {
            get {
                return this.RangeDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.RangeDirectionField, value) != true)) {
                    this.RangeDirectionField = value;
                    this.RaisePropertyChanged("RangeDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Section {
            get {
                return this.SectionField;
            }
            set {
                if ((object.ReferenceEquals(this.SectionField, value) != true)) {
                    this.SectionField = value;
                    this.RaisePropertyChanged("Section");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Township {
            get {
                return this.TownshipField;
            }
            set {
                if ((object.ReferenceEquals(this.TownshipField, value) != true)) {
                    this.TownshipField = value;
                    this.RaisePropertyChanged("Township");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TownshipDirection {
            get {
                return this.TownshipDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.TownshipDirectionField, value) != true)) {
                    this.TownshipDirectionField = value;
                    this.RaisePropertyChanged("TownshipDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LotBlockOther", Namespace="")]
    [System.SerializableAttribute()]
    public partial class LotBlockOther : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Block {
            get {
                return this.BlockField;
            }
            set {
                if ((object.ReferenceEquals(this.BlockField, value) != true)) {
                    this.BlockField = value;
                    this.RaisePropertyChanged("Block");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Lot {
            get {
                return this.LotField;
            }
            set {
                if ((object.ReferenceEquals(this.LotField, value) != true)) {
                    this.LotField = value;
                    this.RaisePropertyChanged("Lot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Other {
            get {
                return this.OtherField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherField, value) != true)) {
                    this.OtherField = value;
                    this.RaisePropertyChanged("Other");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderPlacementService.Partner", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class OrderPlacementServicePartner : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TitleLeader.OrderPlacementWebService.OrderPlacementServiceAddress AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartnerTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TitleLeader.OrderPlacementWebService.OrderPlacementServiceAddress Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartnerTypeID {
            get {
                return this.PartnerTypeIDField;
            }
            set {
                if ((this.PartnerTypeIDField.Equals(value) != true)) {
                    this.PartnerTypeIDField = value;
                    this.RaisePropertyChanged("PartnerTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNumber {
            get {
                return this.ReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNumberField, value) != true)) {
                    this.ReferenceNumberField = value;
                    this.RaisePropertyChanged("ReferenceNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderPlacementService.BuyerSeller", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class OrderPlacementServiceBuyerSeller : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TitleLeader.OrderPlacementWebService.OrderPlacementServiceAddress AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaritalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TitleLeader.OrderPlacementWebService.OrderPlacementServiceBuyerSeller SpouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuffixField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TitleLeader.OrderPlacementWebService.OrderPlacementServiceAddress Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaritalStatus {
            get {
                return this.MaritalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.MaritalStatusField, value) != true)) {
                    this.MaritalStatusField = value;
                    this.RaisePropertyChanged("MaritalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prefix {
            get {
                return this.PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixField, value) != true)) {
                    this.PrefixField = value;
                    this.RaisePropertyChanged("Prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SSN {
            get {
                return this.SSNField;
            }
            set {
                if ((object.ReferenceEquals(this.SSNField, value) != true)) {
                    this.SSNField = value;
                    this.RaisePropertyChanged("SSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TitleLeader.OrderPlacementWebService.OrderPlacementServiceBuyerSeller Spouse {
            get {
                return this.SpouseField;
            }
            set {
                if ((object.ReferenceEquals(this.SpouseField, value) != true)) {
                    this.SpouseField = value;
                    this.RaisePropertyChanged("Spouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suffix {
            get {
                return this.SuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SuffixField, value) != true)) {
                    this.SuffixField = value;
                    this.RaisePropertyChanged("Suffix");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlaceOrderResponse", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class PlaceOrderResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        public int OrderNumber;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        public int ItemNumber;

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AQUADecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResWareFileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResWareFileNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResponseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AQUADecision {
            get {
                return this.AQUADecisionField;
            }
            set {
                if ((object.ReferenceEquals(this.AQUADecisionField, value) != true)) {
                    this.AQUADecisionField = value;
                    this.RaisePropertyChanged("AQUADecision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResWareFileID {
            get {
                return this.ResWareFileIDField;
            }
            set {
                if ((this.ResWareFileIDField.Equals(value) != true)) {
                    this.ResWareFileIDField = value;
                    this.RaisePropertyChanged("ResWareFileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResWareFileNumber {
            get {
                return this.ResWareFileNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ResWareFileNumberField, value) != true)) {
                    this.ResWareFileNumberField = value;
                    this.RaisePropertyChanged("ResWareFileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((this.ResponseCodeField.Equals(value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderPlacementWebService.IOrderPlacementService")]
    public interface IOrderPlacementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderPlacementService/PlaceOrder", ReplyAction="http://tempuri.org/IOrderPlacementService/PlaceOrderResponse")]
        TitleLeader.OrderPlacementWebService.PlaceOrderResponse PlaceOrder(
                    int ClientID, 
                    int OfficeID, 
                    string FileNumber, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePropertyAddress PropertyAddress, 
                    int ClientsClientID, 
                    int TransactionTypeID, 
                    int ProductID, 
                    int UnderwriterID, 
                    int PrimaryContactID, 
                    System.Nullable<System.DateTime> EstimatedSettlementDate, 
                    decimal SalesPrice, 
                    decimal LoanAmount, 
                    string LoanNumber, 
                    decimal CashOut, 
                    string[] PayoffMortgagees, 
                    int[] OptionalActionGroupIDs, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePartner Lender, 
                    bool IsLender, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServiceBuyerSeller[] Buyers, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServiceBuyerSeller[] Sellers, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePartner[] AdditionalPartners, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePartner ClientsClient, 
                    string Notes, 
                    bool RequestAQUADecision, 
                    decimal OriginalDebtAmount, 
                    decimal UnpaidPrincipalAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderPlacementService/PlaceOrder", ReplyAction="http://tempuri.org/IOrderPlacementService/PlaceOrderResponse")]
        System.Threading.Tasks.Task<TitleLeader.OrderPlacementWebService.PlaceOrderResponse> PlaceOrderAsync(
                    int ClientID, 
                    int OfficeID, 
                    string FileNumber, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePropertyAddress PropertyAddress, 
                    int ClientsClientID, 
                    int TransactionTypeID, 
                    int ProductID, 
                    int UnderwriterID, 
                    int PrimaryContactID, 
                    System.Nullable<System.DateTime> EstimatedSettlementDate, 
                    decimal SalesPrice, 
                    decimal LoanAmount, 
                    string LoanNumber, 
                    decimal CashOut, 
                    string[] PayoffMortgagees, 
                    int[] OptionalActionGroupIDs, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePartner Lender, 
                    bool IsLender, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServiceBuyerSeller[] Buyers, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServiceBuyerSeller[] Sellers, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePartner[] AdditionalPartners, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePartner ClientsClient, 
                    string Notes, 
                    bool RequestAQUADecision, 
                    decimal OriginalDebtAmount, 
                    decimal UnpaidPrincipalAmount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderPlacementServiceChannel : TitleLeader.OrderPlacementWebService.IOrderPlacementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderPlacementServiceClient : System.ServiceModel.ClientBase<TitleLeader.OrderPlacementWebService.IOrderPlacementService>, TitleLeader.OrderPlacementWebService.IOrderPlacementService {
        
        public OrderPlacementServiceClient() {
        }
        
        public OrderPlacementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderPlacementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderPlacementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderPlacementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TitleLeader.OrderPlacementWebService.PlaceOrderResponse PlaceOrder(
                    int ClientID, 
                    int OfficeID, 
                    string FileNumber, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePropertyAddress PropertyAddress, 
                    int ClientsClientID, 
                    int TransactionTypeID, 
                    int ProductID, 
                    int UnderwriterID, 
                    int PrimaryContactID, 
                    System.Nullable<System.DateTime> EstimatedSettlementDate, 
                    decimal SalesPrice, 
                    decimal LoanAmount, 
                    string LoanNumber, 
                    decimal CashOut, 
                    string[] PayoffMortgagees, 
                    int[] OptionalActionGroupIDs, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePartner Lender, 
                    bool IsLender, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServiceBuyerSeller[] Buyers, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServiceBuyerSeller[] Sellers, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePartner[] AdditionalPartners, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePartner ClientsClient, 
                    string Notes, 
                    bool RequestAQUADecision, 
                    decimal OriginalDebtAmount, 
                    decimal UnpaidPrincipalAmount) {
            return base.Channel.PlaceOrder(ClientID, OfficeID, FileNumber, PropertyAddress, ClientsClientID, TransactionTypeID, ProductID, UnderwriterID, PrimaryContactID, EstimatedSettlementDate, SalesPrice, LoanAmount, LoanNumber, CashOut, PayoffMortgagees, OptionalActionGroupIDs, Lender, IsLender, Buyers, Sellers, AdditionalPartners, ClientsClient, Notes, RequestAQUADecision, OriginalDebtAmount, UnpaidPrincipalAmount);
        }
        
        public System.Threading.Tasks.Task<TitleLeader.OrderPlacementWebService.PlaceOrderResponse> PlaceOrderAsync(
                    int ClientID, 
                    int OfficeID, 
                    string FileNumber, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePropertyAddress PropertyAddress, 
                    int ClientsClientID, 
                    int TransactionTypeID, 
                    int ProductID, 
                    int UnderwriterID, 
                    int PrimaryContactID, 
                    System.Nullable<System.DateTime> EstimatedSettlementDate, 
                    decimal SalesPrice, 
                    decimal LoanAmount, 
                    string LoanNumber, 
                    decimal CashOut, 
                    string[] PayoffMortgagees, 
                    int[] OptionalActionGroupIDs, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePartner Lender, 
                    bool IsLender, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServiceBuyerSeller[] Buyers, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServiceBuyerSeller[] Sellers, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePartner[] AdditionalPartners, 
                    TitleLeader.OrderPlacementWebService.OrderPlacementServicePartner ClientsClient, 
                    string Notes, 
                    bool RequestAQUADecision, 
                    decimal OriginalDebtAmount, 
                    decimal UnpaidPrincipalAmount) {
            return base.Channel.PlaceOrderAsync(ClientID, OfficeID, FileNumber, PropertyAddress, ClientsClientID, TransactionTypeID, ProductID, UnderwriterID, PrimaryContactID, EstimatedSettlementDate, SalesPrice, LoanAmount, LoanNumber, CashOut, PayoffMortgagees, OptionalActionGroupIDs, Lender, IsLender, Buyers, Sellers, AdditionalPartners, ClientsClient, Notes, RequestAQUADecision, OriginalDebtAmount, UnpaidPrincipalAmount);
        }
    }
}
